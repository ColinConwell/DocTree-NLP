name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      publish_to:
        description: 'Publish to PyPI or TestPyPI'
        type: choice
        required: true
        default: 'pypi'
        options:
          - pypi
          - testpypi

env:
  PACKAGE_NAME: "doctree_nlp"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  basic-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Run basic import check
        run: |
          python -c "import ${{ env.PACKAGE_NAME }}; print(f'Successfully imported ${{ env.PACKAGE_NAME }}')"

  hatch-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch

      - name: Build package
        run: |
          hatch build
          ls -la dist/

      - name: Verify wheel and sdist
        run: |
          if [ ! -f "$(ls dist/*.whl 2>/dev/null)" ]; then
            echo "Wheel file not found in dist/"
            exit 1
          fi
          if [ ! -f "$(ls dist/*.tar.gz 2>/dev/null)" ]; then
            echo "Source distribution not found in dist/"
            exit 1
          fi
          echo "Both wheel and source distribution were created successfully"
          
  deploy-publish:
    needs: [hatch-test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch keyrings.alt

      - name: Build package
        run: |
          hatch build

      - name: Publish to PyPI (on dispatch)
        if: ${{ github.event.inputs.publish_to == 'pypi' }}
        env:
          HATCH_INDEX_USER: __token__
          HATCH_INDEX_AUTH: ${{ secrets.PYPI_TOKEN }}
          PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring
        run: |
          hatch publish

      - name: Publish to PyPI (on release)
        if: ${{ github.event_name == 'release' }}
        env:
          HATCH_INDEX_USER: __token__
          HATCH_INDEX_AUTH: ${{ secrets.PYPI_TOKEN }}
        run: |
          hatch publish

      - name: Publish to TestPyPI (on dispatch)
        if: ${{ github.event.inputs.publish_to == 'testpypi' }}
        env:
          HATCH_INDEX_USER: __token__
          HATCH_INDEX_REPO: test
          HATCH_INDEX_AUTH: ${{ secrets.TESTPYPI_TOKEN }}
          # Bypass keyring for CI environments
          PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring
        run: |
          hatch publish