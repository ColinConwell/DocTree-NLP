{
  "metadata": {
    "id": "199d606e-3bdf-804e-b859-fcafd8adf240",
    "title": "Markdown in Python",
    "created_time": "2025-02-13T17:35:00+00:00",
    "last_edited_time": "2025-02-13T17:36:00+00:00",
    "last_fetched": "2025-03-19T01:39:42.109926"
  },
  "blocks": [
    {
      "id": "199d606e-3bdf-80c8-827b-c9e593a83b71",
      "type": "heading_2",
      "content": "Introduction to Markdown Processing in Python",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-802d-a14a-c2769d6d5894",
      "type": "paragraph",
      "content": "Python offers several libraries for working with Markdown, making it easy to parse, convert, and manipulate Markdown content. Here's a comprehensive guide on the most common approaches.",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-80c0-a6c5-f724bf3b50bc",
      "type": "heading_2",
      "content": "Popular Python Markdown Libraries",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-802e-b458-f84360209cfb",
      "type": "bulleted_list_item",
      "content": "\u2022 markdown: The official Python-Markdown library, ideal for basic Markdown to HTML conversion",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-80d1-9ca3-ddc9f2bd5a60",
      "type": "bulleted_list_item",
      "content": "\u2022 mistune: A fast and full-featured Markdown parser with high extensibility",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-802a-9ad2-e23cd9087eab",
      "type": "bulleted_list_item",
      "content": "\u2022 commonmark: Implementation of the CommonMark spec for consistent Markdown parsing",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-80cb-a027-d46363aa7f13",
      "type": "heading_2",
      "content": "Basic Usage Example",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-804d-af78-c8e7312f3bc5",
      "type": "code",
      "content": "python\nimport markdown\n\n# Basic conversion\nmd_text = \"# Hello World\\n\\nThis is **bold** text.\"\nhtml = markdown.markdown(md_text)\n\n# With extensions\nhtml = markdown.markdown(md_text, extensions=['tables', 'fenced_code'])\n",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-80c5-85d3-c908f404da8a",
      "type": "heading_2",
      "content": "Advanced Markdown Manipulation",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-804e-8dc4-e055536380b3",
      "type": "paragraph",
      "content": "For more complex operations, you might want to parse Markdown into an Abstract Syntax Tree (AST).",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-8012-a6d4-d49e4738f014",
      "type": "code",
      "content": "python\nimport mistune\n\n# Create a parser\nmarkdown = mistune.create_markdown()\n\n# Parse to AST\nast = mistune.create_markdown(renderer=mistune.AstRenderer)\nresult = ast('# Hello\\n\\nWorld')\n\n# Custom parsing\nclass CustomRenderer(mistune.HTMLRenderer):\n    def heading(self, text, level):\n        return f'<h{level} class=\"custom-heading\">{text}</h{level}>'\n\nmarkdown = mistune.create_markdown(renderer=CustomRenderer())",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-8070-96f0-eb9f1b294259",
      "type": "heading_2",
      "content": "Common Operations",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-8086-b30f-cce4171545c8",
      "type": "bulleted_list_item",
      "content": "\u2022 Converting Markdown to HTML: Using basic conversion functions",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-8024-b971-c18379c65420",
      "type": "bulleted_list_item",
      "content": "\u2022 Extracting content: Parsing specific elements like headers or links",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-8073-af22-c5b4e417cfee",
      "type": "bulleted_list_item",
      "content": "\u2022 Modifying content: Manipulating the AST to transform content",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-809a-b872-fb129bf4899e",
      "type": "bulleted_list_item",
      "content": "\u2022 Adding extensions: Supporting additional Markdown features",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-80c6-9093-d81526d65b17",
      "type": "heading_2",
      "content": "Working with Extensions",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-80d1-97ff-e1643216f540",
      "type": "code",
      "content": "python\nimport markdown\nfrom markdown.extensions import fenced_code, tables\n\n# Configure multiple extensions\nmd = markdown.Markdown(extensions=[\n    'extra',\n    'codehilite',\n    'meta',\n    fenced_code.FencedCodeExtension()\n])\n\n# Convert with extensions\nhtml = md.convert(markdown_text)",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-8094-aa16-e987933ba5f9",
      "type": "heading_2",
      "content": "Best Practices",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-80a0-8cce-d96eb6c50101",
      "type": "bulleted_list_item",
      "content": "\u2022 Sanitize input: Always sanitize user-provided Markdown to prevent XSS attacks",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-8020-8856-f4ab9b3e6714",
      "type": "bulleted_list_item",
      "content": "\u2022 Handle errors gracefully: Implement proper error handling for malformed Markdown",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-8055-b243-ff23c96f4b45",
      "type": "bulleted_list_item",
      "content": "\u2022 Use appropriate extensions: Only enable needed extensions to maintain performance",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-806c-a5ed-cce75162722b",
      "type": "bulleted_list_item",
      "content": "\u2022 Cache results: Consider caching parsed results for frequently accessed content",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-8026-a954-e05a4a5d0df8",
      "type": "heading_2",
      "content": "Common Use Cases",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-801a-bed1-d47617e1ce93",
      "type": "paragraph",
      "content": "Here are some typical scenarios where Python Markdown processing is useful:",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-8025-a7b3-dae7d9321dcf",
      "type": "bulleted_list_item",
      "content": "\u2022 Converting documentation files to HTML",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-801f-ac3f-e6326c7d8049",
      "type": "bulleted_list_item",
      "content": "\u2022 Building static site generators",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-804d-883b-cdaacdb13d98",
      "type": "bulleted_list_item",
      "content": "\u2022 Processing user comments or content",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-8083-b57d-e4cf263cd9ce",
      "type": "bulleted_list_item",
      "content": "\u2022 Generating reports from Markdown templates",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-80fb-a9e5-ce883e5a1c4d",
      "type": "heading_2",
      "content": "Performance Considerations",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-8082-a088-e8b75404d88a",
      "type": "paragraph",
      "content": "When working with large amounts of Markdown content, consider these performance tips:",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-80ec-91e7-d7c11cc34b13",
      "type": "bulleted_list_item",
      "content": "\u2022 Use mistune for better performance on large documents",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-80f2-901e-c763f3237104",
      "type": "bulleted_list_item",
      "content": "\u2022 Implement caching for frequently parsed content",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-8086-a543-fac8dba392bd",
      "type": "bulleted_list_item",
      "content": "\u2022 Minimize the number of extensions loaded",
      "has_children": false,
      "indent_level": 0
    },
    {
      "id": "199d606e-3bdf-8029-bfb6-c3f581e27b94",
      "type": "bulleted_list_item",
      "content": "\u2022 Process Markdown in batches when possible",
      "has_children": false,
      "indent_level": 0
    }
  ]
}